{"version":3,"file":"index.mjs","sources":["../src/clear.js","../src/error.js","../src/validation.js","../src/timer.js","../src/dynamic.js"],"sourcesContent":["/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\nconst MAX_INTERVAL_MS = Math.pow(2, 31) - 1\n\n/**\n * Stops an execution cycle started by setIntervalAsync.<br>\n * Any ongoing function executions will run until completion,\n * but all future ones will be cancelled.\n *\n * @param {SetIntervalAsyncTimer} timer\n * @returns {Promise}\n *          A promise which resolves when all pending executions have finished.\n */\nasync function clearIntervalAsync (timer) {\n  timer.stopped = true\n  for (const timeout of Object.values(timer.timeouts)) {\n    clearTimeout(timeout)\n  }\n  const noop = () => {}\n  const promises = Object\n    .values(timer.promises)\n    .map(\n      (promise) => {\n        promise.catch(noop)\n      }\n    )\n  const noopInterval = setInterval(noop, MAX_INTERVAL_MS)\n  await Promise.all(promises)\n  clearInterval(noopInterval)\n}\n\nexport { clearIntervalAsync }\n","/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\n/**\n * Error thrown by setIntervalAsync when invalid arguments are provided.\n */\nclass SetIntervalAsyncError extends Error {\n}\n\nObject.defineProperty(\n  SetIntervalAsyncError.prototype,\n  'name',\n  {\n    value: 'SetIntervalAsyncError'\n  }\n)\n\nexport default SetIntervalAsyncError\n","/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\nimport SetIntervalAsyncError from './error'\n\nconst MIN_INTERVAL_MS = 10\n\n/**\n * @private\n *\n * @param {function} handler - Handler function to be executed in intervals.<br>\n *                             May be asynchronous.\n */\nexport function validateHandler (handler) {\n  if (!(\n    typeof handler === 'function'\n  )) {\n    throw new SetIntervalAsyncError(\n      'Invalid argument: \"handler\". Expected a function.'\n    )\n  }\n}\n\n/**\n * @private\n *\n * @param {number} interval - Interval in milliseconds. Must be at least 10 ms.\n */\nexport function validateInterval (interval) {\n  if (!(\n    typeof interval === 'number' && MIN_INTERVAL_MS <= interval\n  )) {\n    throw new SetIntervalAsyncError(\n      `Invalid argument: \"interval\". Expected a number greater than or equal to ${MIN_INTERVAL_MS}.`\n    )\n  }\n}\n","/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\n/**\n * Timer object returned by setIntervalAsync.<br>\n * Can be used together with {@link clearIntervalAsync} to stop execution.\n */\nclass SetIntervalAsyncTimer {\n  constructor () {\n    this.stopped = false\n    this.id = 0\n    this.timeouts = {}\n    this.promises = {}\n  }\n}\n\nexport default SetIntervalAsyncTimer\n","/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\nimport { clearIntervalAsync } from './clear'\nimport { validateHandler, validateInterval } from './validation'\nimport SetIntervalAsyncError from './error'\nimport SetIntervalAsyncTimer from './timer'\n\n/**\n * Attempts to execute the given handler at regular intervals, while preventing<br>\n * multiple concurrent executions. The handler will never be executed concurrently<br>\n * more than once in any given moment. If the running time of any execution exceeds<br>\n * the desired interval, the following execution will be scheduled as soon as<br>\n * possible; ie. immediately after the previous execution concludes.\n *\n * @param {function} handler - Handler function to be executed in intervals.<br>\n *                             May be asynchronous.\n * @param {number} interval - Interval in milliseconds. Must be at least 10 ms.\n * @param {...*} args - Any number of arguments to pass on to the handler.\n * @returns {SetIntervalAsyncTimer}\n *          A timer object which can be used to stop execution with {@link clearIntervalAsync}.\n *\n * @alias [Dynamic] setIntervalAsync\n */\nfunction setIntervalAsync (handler, interval, ...args) {\n  validateHandler(handler)\n  validateInterval(interval)\n  const timer = new SetIntervalAsyncTimer()\n  const id = timer.id\n  timer.timeouts[id] = setTimeout(\n    timeoutHandler,\n    interval,\n    timer,\n    handler,\n    interval,\n    ...args\n  )\n  return timer\n}\n\nfunction timeoutHandler (timer, handler, interval, ...args) {\n  const id = timer.id\n  timer.promises[id] = (async () => {\n    const startTime = new Date()\n    try {\n      await handler(...args)\n    } catch (err) {\n      console.error(err)\n    }\n    const endTime = new Date()\n    if (!timer.stopped) {\n      const executionTime = endTime - startTime\n      const timeout = interval > executionTime\n        ? interval - executionTime\n        : 0\n      timer.timeouts[id + 1] = setTimeout(\n        timeoutHandler,\n        timeout,\n        timer,\n        handler,\n        interval,\n        ...args\n      )\n    }\n    delete timer.timeouts[id]\n    delete timer.promises[id]\n  })()\n  timer.id = id + 1\n}\n\nexport { setIntervalAsync, clearIntervalAsync, SetIntervalAsyncError }\n"],"names":["MAX_INTERVAL_MS","Math","pow","clearIntervalAsync","timer","stopped","Object","values","timeouts","timeout","clearTimeout","noop","promises","map","promise","catch","noopInterval","setInterval","Promise","all","clearInterval","SetIntervalAsyncError","Error","defineProperty","prototype","value","MIN_INTERVAL_MS","validateHandler","handler","validateInterval","interval","SetIntervalAsyncTimer","constructor","id","setIntervalAsync","args","setTimeout","timeoutHandler","startTime","Date","err","console","error","endTime","executionTime"],"mappings":"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"}