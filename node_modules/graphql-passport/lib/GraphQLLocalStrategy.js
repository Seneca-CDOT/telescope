"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _passportStrategy = require("passport-strategy");

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var GraphQLLocalStrategy = /*#__PURE__*/function (_PassportStrategy) {
  _inherits(GraphQLLocalStrategy, _PassportStrategy);

  function GraphQLLocalStrategy(options, verify) {
    var _this;

    _classCallCheck(this, GraphQLLocalStrategy);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(GraphQLLocalStrategy).call(this));

    if (typeof options === 'function') {
      _this.verify = options;
      _this.passReqToCallback = false;
    } else {
      _this.verify = verify;
      _this.passReqToCallback = options.passReqToCallback;
    }

    if (!_this.verify) {
      throw new TypeError('GraphQLLocalStrategy requires a verify callback');
    }

    _this.name = 'graphql-local';
    return _this;
  }

  _createClass(GraphQLLocalStrategy, [{
    key: "authenticate",
    value: function authenticate(req, options) {
      var _this2 = this;

      var username = options.username,
          email = options.email,
          password = options.password;

      var done = function done(err, user, info) {
        if (err) {
          return _this2.error(err);
        }

        if (!user) {
          return _this2.fail(info, 401);
        }

        return _this2.success(user, info);
      };

      if (this.passReqToCallback) {
        // @ts-ignore - not sure how tow handle this nicely in TS
        this.verify(req, username || email, password, done);
      } else {
        // @ts-ignore - not sure how tow handle this nicely in TS
        this.verify(username || email, password, done);
      }
    }
  }]);

  return GraphQLLocalStrategy;
}(_passportStrategy.Strategy);

var _default = GraphQLLocalStrategy;
exports["default"] = _default;
//# sourceMappingURL=GraphQLLocalStrategy.js.map