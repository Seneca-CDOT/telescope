{"version":3,"sources":["../../src/bootstrap/page-hot-reloader.ts"],"names":["deletePage","deleteComponentsDependencies","boundActionCreators","pagesDirty","graphql","runCreatePages","timestamp","Date","now","activity","report","activityTimer","start","traceId","waitForCascadingActions","end","Array","from","store","getState","pages","values","forEach","page","isCreatedByStatefulCreatePages","updatedAt","path","emitter","emit","PageHotReloader","graphqlRunner","on","action","payload","internal","type"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AADA,MAAM;AAAEA,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAA+CC,4BAArD;AASA,IAAIC,UAAU,GAAG,KAAjB;AACA,IAAIC,OAAJ;;AAEA,MAAMC,cAAc,GAAG,YAA2B;AAChDF,EAAAA,UAAU,GAAG,KAAb;AAEA,QAAMG,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB,CAHgD,CAKhD;;AACA,QAAMC,QAAQ,GAAGC,kBAAOC,aAAP,CAAsB,aAAtB,CAAjB;;AACAF,EAAAA,QAAQ,CAACG,KAAT;AACA,QAAM,4BACH,aADG,EAEJ;AACER,IAAAA,OADF;AAEES,IAAAA,OAAO,EAAG,aAFZ;AAGEC,IAAAA,uBAAuB,EAAE;AAH3B,GAFI,EAOJ;AAAEL,IAAAA;AAAF,GAPI,CAAN;AASAA,EAAAA,QAAQ,CAACM,GAAT,GAjBgD,CAmBhD;;AACAC,EAAAA,KAAK,CAACC,IAAN,CAAWC,aAAMC,QAAN,GAAiBC,KAAjB,CAAuBC,MAAvB,EAAX,EAA4CC,OAA5C,CAAqDC,IAAD,IAAuB;AACzE,QACE,CAACA,IAAI,CAACC,8BAAN,IACAD,IAAI,CAACE,SAAL,GAAiBnB,SADjB,IAEAiB,IAAI,CAACG,IAAL,KAAe,WAHjB,EAIE;AACAzB,MAAAA,4BAA4B,CAAC,CAACsB,IAAI,CAACG,IAAN,CAAD,CAA5B;AACA1B,MAAAA,UAAU,CAACuB,IAAD,CAAV;AACD;AACF,GATD;;AAWAI,iBAAQC,IAAR,CAAc,iBAAd;AACD,CAhCD;;AAkCO,MAAMC,eAAe,GAAIC,aAAD,IAAwC;AACrE1B,EAAAA,OAAO,GAAG0B,aAAV;;AACAH,iBAAQI,EAAR,CAAY,aAAZ,EAA2BC,MAAD,IAA+B;AACvD,QAAIA,MAAM,CAACC,OAAP,CAAeC,QAAf,CAAwBC,IAAxB,KAAkC,UAAtC,EAAiD;AAC/ChC,MAAAA,UAAU,GAAG,IAAb;AACD;AACF,GAJD;;AAKAwB,iBAAQI,EAAR,CAAY,aAAZ,EAA2BC,MAAD,IAA+B;AACvD,QAAIA,MAAM,CAACC,OAAP,CAAeC,QAAf,CAAwBC,IAAxB,KAAkC,UAAtC,EAAiD;AAC/ChC,MAAAA,UAAU,GAAG,IAAb,CAD+C,CAE/C;AACA;AACA;AACA;;AACA,kCAAe,eAAf;AACD;AACF,GATD;;AAWAwB,iBAAQI,EAAR,CAAY,yBAAZ,EAAsC,MAAY;AAChD,QAAI5B,UAAJ,EAAgB;AACdE,MAAAA,cAAc;AACf;AACF,GAJD;AAKD,CAvBM","sourcesContent":["import { emitter, store } from \"../redux\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { boundActionCreators } from \"../redux/actions\"\nconst { deletePage, deleteComponentsDependencies } = boundActionCreators\nimport report from \"gatsby-cli/lib/reporter\"\nimport {\n  ICreateNodeAction,\n  IDeleteNodeAction,\n  IGatsbyPage,\n} from \"../redux/types\"\nimport { GraphQLRunner } from \"../query/graphql-runner\"\n\nlet pagesDirty = false\nlet graphql: GraphQLRunner\n\nconst runCreatePages = async (): Promise<void> => {\n  pagesDirty = false\n\n  const timestamp = Date.now()\n\n  // Collect pages.\n  const activity = report.activityTimer(`createPages`)\n  activity.start()\n  await apiRunnerNode(\n    `createPages`,\n    {\n      graphql,\n      traceId: `createPages`,\n      waitForCascadingActions: true,\n    },\n    { activity }\n  )\n  activity.end()\n\n  // Delete pages that weren't updated when running createPages.\n  Array.from(store.getState().pages.values()).forEach((page: IGatsbyPage) => {\n    if (\n      !page.isCreatedByStatefulCreatePages &&\n      page.updatedAt < timestamp &&\n      page.path !== `/404.html`\n    ) {\n      deleteComponentsDependencies([page.path])\n      deletePage(page)\n    }\n  })\n\n  emitter.emit(`CREATE_PAGE_END`)\n}\n\nexport const PageHotReloader = (graphqlRunner: GraphQLRunner): void => {\n  graphql = graphqlRunner\n  emitter.on(`CREATE_NODE`, (action: ICreateNodeAction) => {\n    if (action.payload.internal.type !== `SitePage`) {\n      pagesDirty = true\n    }\n  })\n  emitter.on(`DELETE_NODE`, (action: IDeleteNodeAction) => {\n    if (action.payload.internal.type !== `SitePage`) {\n      pagesDirty = true\n      // Make a fake API call to trigger `API_RUNNING_QUEUE_EMPTY` being called.\n      // We don't want to call runCreatePages here as there might be work in\n      // progress. So this is a safe way to make sure runCreatePages gets called\n      // at a safe time.\n      apiRunnerNode(`FAKE_API_CALL`)\n    }\n  })\n\n  emitter.on(`API_RUNNING_QUEUE_EMPTY`, (): void => {\n    if (pagesDirty) {\n      runCreatePages()\n    }\n  })\n}\n"],"file":"page-hot-reloader.js"}