"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.PageHotReloader = void 0;

var _redux = require("../redux");

var _apiRunnerNode = _interopRequireDefault(require("../utils/api-runner-node"));

var _actions = require("../redux/actions");

var _reporter = _interopRequireDefault(require("gatsby-cli/lib/reporter"));

const {
  deletePage,
  deleteComponentsDependencies
} = _actions.boundActionCreators;
let pagesDirty = false;
let graphql;

const runCreatePages = async () => {
  pagesDirty = false;
  const timestamp = Date.now(); // Collect pages.

  const activity = _reporter.default.activityTimer(`createPages`);

  activity.start();
  await (0, _apiRunnerNode.default)(`createPages`, {
    graphql,
    traceId: `createPages`,
    waitForCascadingActions: true
  }, {
    activity
  });
  activity.end(); // Delete pages that weren't updated when running createPages.

  Array.from(_redux.store.getState().pages.values()).forEach(page => {
    if (!page.isCreatedByStatefulCreatePages && page.updatedAt < timestamp && page.path !== `/404.html`) {
      deleteComponentsDependencies([page.path]);
      deletePage(page);
    }
  });

  _redux.emitter.emit(`CREATE_PAGE_END`);
};

const PageHotReloader = graphqlRunner => {
  graphql = graphqlRunner;

  _redux.emitter.on(`CREATE_NODE`, action => {
    if (action.payload.internal.type !== `SitePage`) {
      pagesDirty = true;
    }
  });

  _redux.emitter.on(`DELETE_NODE`, action => {
    if (action.payload.internal.type !== `SitePage`) {
      pagesDirty = true; // Make a fake API call to trigger `API_RUNNING_QUEUE_EMPTY` being called.
      // We don't want to call runCreatePages here as there might be work in
      // progress. So this is a safe way to make sure runCreatePages gets called
      // at a safe time.

      (0, _apiRunnerNode.default)(`FAKE_API_CALL`);
    }
  });

  _redux.emitter.on(`API_RUNNING_QUEUE_EMPTY`, () => {
    if (pagesDirty) {
      runCreatePages();
    }
  });
};

exports.PageHotReloader = PageHotReloader;
//# sourceMappingURL=page-hot-reloader.js.map