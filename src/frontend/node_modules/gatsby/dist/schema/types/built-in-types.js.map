{"version":3,"sources":["../../../src/schema/types/built-in-types.ts"],"names":["fileType","directoryType","site","siteSiteMetadata","sitePageType","allSdlTypes","overridableBuiltInTypeNames","Set","builtInTypeDefinitions","map","type"],"mappings":";;;;;AAAA;;AAEA,MAAMA,QAAQ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlB;AAoCA,MAAMC,aAAa,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAvB;AAoCA,MAAMC,IAAI,GAAI;;;;;CAAd;AAOA,MAAMC,gBAAgB,GAAI;;;;;CAA1B;AAOA,MAAMC,YAAY,GAAI;;;;;;;;CAAtB;AAUA,MAAMC,WAAW,GAAG,CAClBL,QADkB,EAElBC,aAFkB,EAGlBC,IAHkB,EAIlBC,gBAJkB,EAKlBC,YALkB,CAApB;AAQO,MAAME,2BAA2B,GAAG,IAAIC,GAAJ,CAAQ,CAAE,kBAAF,CAAR,CAApC;;;AAEA,MAAMC,sBAAsB,GAAG,MACpCH,WAAW,CAACI,GAAZ,CAAgBC,IAAI,IAAI,oBAAMA,IAAN,CAAxB,CADK","sourcesContent":["import { parse, DocumentNode } from \"graphql\"\n\nconst fileType = `\n  type File implements Node @infer {\n    sourceInstanceName: String!\n    absolutePath: String!\n    relativePath: String!\n    extension: String!\n    size: Int!\n    prettySize: String!\n    modifiedTime: Date! @dateformat\n    accessTime: Date! @dateformat\n    changeTime: Date! @dateformat\n    birthTime: Date! @dateformat\n    root: String!\n    dir: String!\n    base: String!\n    ext: String!\n    name: String!\n    relativeDirectory: String!\n    dev: Int!\n    mode: Int!\n    nlink: Int!\n    uid: Int!\n    gid: Int!\n    rdev: Int!\n    ino: Float!\n    atimeMs: Float!\n    mtimeMs: Float!\n    ctimeMs: Float!\n    atime: Date! @dateformat\n    mtime: Date! @dateformat\n    ctime: Date! @dateformat\n    birthtime: Date @deprecated(reason: \"Use \\`birthTime\\` instead\")\n    birthtimeMs: Float @deprecated(reason: \"Use \\`birthTime\\` instead\")\n  }\n`\n\nconst directoryType = `\n  type Directory implements Node @infer {\n    sourceInstanceName: String!\n    absolutePath: String!\n    relativePath: String!\n    extension: String!\n    size: Int!\n    prettySize: String!\n    modifiedTime: Date! @dateformat\n    accessTime: Date! @dateformat\n    changeTime: Date! @dateformat\n    birthTime: Date! @dateformat\n    root: String!\n    dir: String!\n    base: String!\n    ext: String!\n    name: String!\n    relativeDirectory: String!\n    dev: Int!\n    mode: Int!\n    nlink: Int!\n    uid: Int!\n    gid: Int!\n    rdev: Int!\n    ino: Float!\n    atimeMs: Float!\n    mtimeMs: Float!\n    ctimeMs: Float!\n    atime: Date! @dateformat\n    mtime: Date! @dateformat\n    ctime: Date! @dateformat\n    birthtime: Date @deprecated(reason: \"Use \\`birthTime\\` instead\")\n    birthtimeMs: Float @deprecated(reason: \"Use \\`birthTime\\` instead\")\n  }\n`\n\nconst site = `\n  type Site implements Node @infer {\n    buildTime: Date @dateformat\n    siteMetadata: SiteSiteMetadata\n  }\n`\n\nconst siteSiteMetadata = `\n  type SiteSiteMetadata {\n    title: String\n    description: String\n  }\n`\n\nconst sitePageType = `\n  type SitePage implements Node @infer {\n    path: String!\n    component: String!\n    internalComponentName: String!\n    componentChunkName: String!\n    matchPath: String\n  }\n`\n\nconst allSdlTypes = [\n  fileType,\n  directoryType,\n  site,\n  siteSiteMetadata,\n  sitePageType,\n]\n\nexport const overridableBuiltInTypeNames = new Set([`SiteSiteMetadata`])\n\nexport const builtInTypeDefinitions = (): Array<DocumentNode> =>\n  allSdlTypes.map(type => parse(type))\n"],"file":"built-in-types.js"}