{"version":3,"sources":["../../../src/state-machines/waiting/actions.ts"],"names":["callApi","store","event","payload","addNodeMutation","nodeMutationBatch","push","extractQueries","waitingActions"],"mappings":";;;;;AAAA;;AAUA;;AAEO,MAAMA,OAAwD,GAAG,CACtE;AAAEC,EAAAA;AAAF,CADsE,EAEtEC,KAFsE,KAGnE,kCAAYA,KAAK,CAACC,OAAlB,EAA2BF,KAA3B,CAHE;AAKP;;;;;;;AAIO,MAAMG,eAAyD,GAAG,oBACvE;AACEC,EAAAA,iBAAiB,EAAE,CAAC;AAAEA,IAAAA,iBAAiB,GAAG;AAAtB,GAAD,EAA6B;AAAEF,IAAAA;AAAF,GAA7B,KAA6C;AAC9D;AACAE,IAAAA,iBAAiB,CAACC,IAAlB,CAAuBH,OAAvB;AACA,WAAOE,iBAAP;AACD;AALH,CADuE,CAAlE;;AAUA,MAAME,cAAc,GAAG,wBAC3B,qBAD2B,CAAvB;;AAIA,MAAMC,cAA6D,GAAG;AAC3EJ,EAAAA,eAD2E;AAE3EG,EAAAA,cAF2E;AAG3EP,EAAAA;AAH2E,CAAtE","sourcesContent":["import {\n  AssignAction,\n  assign,\n  ActionFunctionMap,\n  sendParent,\n  AnyEventObject,\n  ActionFunction,\n} from \"xstate\"\nimport { IWaitingContext } from \"./types\"\nimport { AnyAction } from \"redux\"\nimport { callRealApi } from \"../../utils/call-deferred-api\"\n\nexport const callApi: ActionFunction<IWaitingContext, AnyEventObject> = (\n  { store },\n  event\n) => callRealApi(event.payload, store)\n\n/**\n * Event handler used when we're not ready to process node mutations.\n * Instead we add it to a batch to process when we're next idle\n */\nexport const addNodeMutation: AssignAction<IWaitingContext, AnyAction> = assign(\n  {\n    nodeMutationBatch: ({ nodeMutationBatch = [] }, { payload }) => {\n      // It's not pretty, but it's much quicker than concat\n      nodeMutationBatch.push(payload)\n      return nodeMutationBatch\n    },\n  }\n)\n\nexport const extractQueries = sendParent<IWaitingContext, AnyEventObject>(\n  `EXTRACT_QUERIES_NOW`\n)\n\nexport const waitingActions: ActionFunctionMap<IWaitingContext, AnyAction> = {\n  addNodeMutation,\n  extractQueries,\n  callApi,\n}\n"],"file":"actions.js"}