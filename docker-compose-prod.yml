# Version 3, most current, and recommended compose file version
# https://docs.docker.com/compose/compose-file/compose-versioning/
version: '3'

services:
  telescope:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      # a place-holder for the variable passed by CLI with a default value
      # the passed or default value is a command to run `telescope`
      - script=${script:-start}
      # override the .env variable for `REDIS_URL`
      - REDIS_URL=redis://redis:${REDIS_PORT}
    depends_on:
      - redis
      - login
    ports:
      - '$PORT:$PORT'
    restart_policy:
      condition: any
      delay: 5s
      max_attempts: 3
      window: 120s

  redis:
    image: redis:latest
    ports:
      - '$REDIS_PORT:$REDIS_PORT'
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  # SSO Identity Provider test service, https://simplesamlphp.org
  # Access to the authentication page via http://localhost:8080/simplesaml or https://localhost:8443/simplesaml
  login:
    environment:
      - SIMPLESAMLPHP_SP_ENTITY_ID=${SAML2_CLIENT_ID:-saml-poc}
      - SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=${SAML2_REDIRECT_URI}
    # image owner's blog post https://medium.com/disney-streaming/setup-a-single-sign-on-saml-test-environment-with-docker-and-nodejs-c53fc1a984c9
    image: kristophjunge/test-saml-idp
    ports:
      # These ports + port 80 are pre-defined in the latter image
      # http port
      - '8080:8080'
      # https port
      - '8443:8443'
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    # This makes nginx reload its configuration (and certificates) every six hours in the background and
    # launches nginx in the foreground
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  certbot:
    image: certbot/certbot
    volumes:
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot
    # This will check if your certificate is up for renewal every 12 hours as recommended by Letâ€™s Encrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
