name: node-js-ci

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  # Confirm that prettier was run on the changes
  prettier:
    name: Prettier Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup a lock file
        run: npm install --package-lock-only
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '14'
          cache: 'npm'
      - name: Install dependencies and run prettier-check
        run: |
          npm install
          npm run prettier-check

  # Make sure eslint passes
  eslint:
    name: ESLint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup a lock file
        run: npm install --package-lock-only
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '14'
          cache: 'npm'
      - name: Install dependencies and run eslint
        run: |
          npm install
          npm run eslint

  # Run unit tests on all platforms/versions of node
  unit:
    name: Unit Tests
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Setup a lock file
        run: npm install --package-lock-only --ignore-scripts
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: Install dependencies and run tests with default env
        run: |
          npm install
          npm run jest --max-workers ${{ steps.cpu-cores.outputs.count }}

  # Run end-to-end tests along with the microservices in docker-compose on Linux
  e2e:
    name: End-To-End Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Setup a lock file
        run: npm install --package-lock-only
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - uses: microsoft/playwright-github-action@v1
      - name: Start microservices and run tests
        run: |
          npm install
          npm run services:start
          npm run jest:e2e
