name: node-js-ci

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  # Confirm that prettier was run on the changes
  prettier:
    name: Prettier Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.5
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true
      - name: Cache pnpm modules
        uses: actions/cache@v2.1.5
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Run prettier-check
        run: |
          pnpm run prettier-check

  # Make sure eslint passes
  eslint:
    name: ESLint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.5
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true
      - name: Cache pnpm modules
        uses: actions/cache@v2.1.5
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Run eslint
        run: |
          pnpm run eslint

  # Run unit tests on all platforms/versions of node
  unit:
    name: Unit Tests
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.5
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true
      - name: Cache pnpm modules
        uses: actions/cache@v2.1.5
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: Run unit tests with default env
        run: |
          # pnpm can't handle passing args through to run scripts: https://github.com/pnpm/pnpm/issues/2764
          npm run jest --max-workers ${{ steps.cpu-cores.outputs.count }}

  # Run end-to-end tests along with the microservices in docker-compose on Linux
  e2e:
    name: End-To-End Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.5
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true
      - name: Cache pnpm modules
        uses: actions/cache@v2.1.5
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
      - uses: microsoft/playwright-github-action@v1
      - name: Start microservices and run e2e tests
        run: |
          pnpm run services:start
          pnpm run jest:e2e
