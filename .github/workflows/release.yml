name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '[0-9]+.[0-9]+.[0-9]+' # Push events to any matching semantic tag. For example, 1.10.1 or 2.0.0.
        # For more details, see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
        # and https://docs.npmjs.com/about-semantic-versioning

jobs:
  # Confirm that prettier was run on the changes
  prettier:
    uses: Seneca-CDOT/telescope/.github/workflows/prettier-ci.yml@master

  # Make sure eslint passes
  eslint:
    uses: Seneca-CDOT/telescope/.github/workflows/eslint-ci.yml@master

  # Run unit tests on all platforms/versions of node
  unit:
    uses: Seneca-CDOT/telescope/.github/workflows/unit-tests-ci.yml@master

  # Run end-to-end tests along with the microservices in docker-compose on Linux
  e2e:
    uses: Seneca-CDOT/telescope/.github/workflows/e2e-tests-ci.yml@master

  release:
    needs: [prettier, eslint, unit, e2e]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@main
        with:
          configuration: 'release-changelog-builder-config.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{steps.build_changelog.outputs.changelog}}
          draft: false
          prerelease: false
