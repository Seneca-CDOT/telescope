name: Docker Build and Push

on:
  workflow_call:
    inputs:
      deploy_tag:
        description: 'The deploy tag to use, one of `staging` or `production`'
        required: true
        type: string
      web_url:
        description: 'The front-end web URL (defaults to staging)'
        required: false
        default: 'https://dev.telescope.cdot.systems'
        type: string
      api_url:
        description: 'The microservice gateway URL (defaults to staging)'
        required: false
        default: 'https://dev.telescope.cdot.systems'
        type: string
      image_url:
        description: 'The image microservice URL (defaults to staging)'
        required: false
        default: 'https://dev.api.telescope.cdot.systems/v1/image'
        type: string
      sso_url:
        description: 'The sso microservice URL (defaults to staging)'
        required: false
        default: 'https://dev.api.telescope.cdot.systems/v1/auth'
        type: string
      posts_url:
        description: 'The posts microservice URL (defaults to staging)'
        required: false
        default: 'https://dev.api.telescope.cdot.systems/v1/posts'
        type: string
      search_url:
        description: 'The search microservice URL (defaults to staging)'
        required: false
        default: 'https://dev.api.telescope.cdot.systems/v1/search'
        type: string
      feed_discovery_url:
        description: 'The feed-discovery microservice URL (defaults to staging)'
        required: false
        default: 'https://dev.api.telescope.cdot.systems/v1/feed-discovery'
        type: string
      status_url:
        description: 'The status microservice URL (defaults to staging)'
        required: false
        default: 'https://dev.api.telescope.cdot.systems/v1/status'
        type: string
      supabase_url:
        description: 'The Supabase URL'
        required: false
        default: 'https://dev.api.telescope.cdot.systems/v1/supabase'
        type: string
      anon_key:
        description: 'The Supabase Anonymous Key'
        required: false
        default: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE'
        type: string
    secrets:
      docker_username:
        description: 'The Docker Registry username'
        required: true
      docker_password:
        description: 'The Docker Registry password'
        required: true

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: docker.cdot.systems

    strategy:
      matrix:
        include:
          # TODO
          # - context: src/api
          #  image: telescope-base
          # - context: src/docs
          #  image: docs
          - context: src/api/feed-discovery
            image: feed-discovery
          - context: src/web/app
            image: nginx
            build-args: |
              WEB_URL=${{ inputs.web_url }}
              API_URL=${{ inputs.api_url }}
              IMAGE_URL=${{ inputs.image_url }}
              SSO_URL=${{ inputs.sso_url }}
              POSTS_URL=${{ inputs.posts_url }}
              SEARCH_URL=${{ inputs.search_url }}
              FEED_DISCOVERY_URL=${{ inputs.feed_discovery_url }}
              STATUS_URL=${{ inputs.status_url }}
              SUPABASE_URL=${{ inputs.supabase_url }}
              ANON_KEY=${{ inputs.anon_key }}
          - context: src/api/planet
            image: planet
          - context: src/api/posts
            image: posts
          - context: src/api/dependency-discovery
            image: dependency-discovery
          - context: src/api/status
            image: status
          - context: src/api/parser
            image: parser
          - context: src/api/image
            image: image
          - context: src/api/search
            image: search
          - context: src/api/sso
            image: sso
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          registry: https://${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - uses: docker/build-push-action@v2
        env:
          DOCKER_REPO: ${{ env.DOCKER_REGISTRY }}/${{ matrix.image }}
        with:
          context: ${{ matrix.context }}
          build-args: ${{ matrix.build-args }}
          # Use our CDOT Docker Registry to cache image builds
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REPO }}:buildcache,mode=max
          tags: ${{ env.DOCKER_REPO }}:${{ inputs.deploy_tag }}, ${{ env.DOCKER_REPO }}:latest
          push: true
