# Version 3, most current, and recommended compose file version
# https://docs.docker.com/compose/compose-file/compose-versioning/
version: '3'

services:
  logrotate:
    build:
      context: ./tools/logrotate
      dockerfile: Dockerfile
    restart: always
    volumes:
      - rotate:/var/log

  telescope:
    container_name: telescope_production
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      # a place-holder for the variable passed by CLI with a default value
      # the passed or default value is a command to run `telescope`
      - script=${script:-start}
      # override the .env variable for `REDIS_URL`
      - REDIS_URL=redis://redis:${REDIS_PORT}
      # variables for elasticsearch
      - ES_HOST=elasticsearch
      - ELASTIC_URL=http://elasticsearch
    depends_on:
      - redis
      - elasticsearch
    volumes:
      # Volume to be shared with nginx for serving static content
      - static:/telescope/src/frontend/gatsby/public
      # Volume to be shared for log rotation
      - rotate:/telescope/log
    restart: always

  redis:
    image: redis:latest
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ../redis-data:/data
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    environment:
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - discovery.type=single-node
    volumes:
      # The directory in the host where the data from elasticsearch will be stored
      # needs to be owned by 1000:1000
      # https://discuss.elastic.co/t/elastic-elasticsearch-docker-not-assigning-permissions-to-data-directory-on-run/65812/3
      - ../elastic-data:/usr/share/elasticsearch/data:rw
    restart: always

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot
      # Volume to be shared with Telescope for serving static content
      - static:/var/www/data
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - telescope
    # This makes nginx reload its configuration (and certificates) every six hours in the background and
    # launches nginx in the foreground
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    volumes:
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot
    restart: always
    # This will check if your certificate is up for renewal every 12 hours as recommended by Letâ€™s Encrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static:
  rotate:
