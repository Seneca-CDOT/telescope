################################################################################
# Environment Variables for Development
#
# Copy this file to `.env` for use by docker-compose.
################################################################################

COMPOSE_PROJECT_NAME=telescope_api

# Use buildx in docker-compose, see https://docs.docker.com/buildx/working-with-buildx
# With buildx, you get a more efficient build, better caching, and more.
COMPOSE_DOCKER_CLI_BUILD=1
DOCKER_BUILDKIT=1

# Compose files to use together during development. NOTE: we specify separator below
# so it will work on Windows and Unix, see
# https://docs.docker.com/compose/reference/envvars/#compose_file
COMPOSE_PATH_SEPARATOR=;
COMPOSE_FILE=docker/docker-compose.yml;docker/development.yml;docker/supabase/docker-compose.yml;docker/supabase/supabase-development.yml


# The host where the Telescope 1.0 front-end and back-end are run.
TELESCOPE_HOST=http://localhost:3000

# The host where all the microservices run (e.g., http://localhost)
# NOTE: if you change this, change all other occurrences below too.
API_HOST=localhost

# Front-end web URL (entry point to the next.js app). Make sure that the
# ALLOWED_APP_ORIGINS variable below includes this URL, so that the SSO
# service will allow redirects back to this origin.
WEB_URL=http://localhost:8000

# The API Version, used as a prefix on all routes: /v1
API_VERSION=v1

# GIT_COMMIT, used to retrieve data on the current commit on the master branch, set to master for local enviroments only
GIT_COMMIT=master

################################################################################
# Secrets
#
# Telescope secrets
# NOTE: Prod/Staging secrets are loaded from a seperate file
################################################################################

# Supabase Secrets
POSTGRES_PASSWORD=your-super-secret-and-long-postgres-password
JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
# NOTE: to generate these keys, use https://supabase.com/docs/guides/hosting/overview#api-keys
# and the JWT_SECRET to create the new key types.
ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q


################################################################################
# Status Service
################################################################################

# Status Service Port (default is 1111)
STATUS_PORT=1111

STATUS_URL=http://localhost/v1/status

################################################################################
# SSO Auth Service
################################################################################

# SSO Auth Service Port (default is 7777)
SSO_PORT=7777

# SSO Service URL
SSO_URL=http://localhost/v1/auth

# The Single Sign On (SSO) login service URL
SSO_LOGIN_URL=http://localhost:8081/simplesaml/saml2/idp/SSOService.php

# The callback URL endpoint to be used by the SSO login service (see the /auth route)
SSO_LOGIN_CALLBACK_URL=http://localhost/v1/auth/login/callback

# The Single Logout (SLO) service URL
SLO_LOGOUT_URL=http://localhost:8081/simplesaml/saml2/idp/SingleLogoutService.php

# The callback URL endpoint to be used by the SLO logout service (see the /auth route)
SLO_LOGOUT_CALLBACK_URL=http://localhost/v1/auth/logout/callback

# The SSO Identity Provider's public key certificate. NOTE: this is the public
# key cert of the test login IdP docker container.  Update for staging and prod.
SSO_IDP_PUBLIC_KEY_CERT=MIIDXTCCAkWgAwIBAgIJALmVVuDWu4NYMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwHhcNMTYxMjMxMTQzNDQ3WhcNNDgwNjI1MTQzNDQ3WjBFMQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzUCFozgNb1h1M0jzNRSCjhOBnR+uVbVpaWfXYIR+AhWDdEe5ryY+CgavOg8bfLybyzFdehlYdDRgkedEB/GjG8aJw06l0qF4jDOAw0kEygWCu2mcH7XOxRt+YAH3TVHa/Hu1W3WjzkobqqqLQ8gkKWWM27fOgAZ6GieaJBN6VBSMMcPey3HWLBmc+TYJmv1dbaO2jHhKh8pfKw0W12VM8P1PIO8gv4Phu/uuJYieBWKixBEyy0lHjyixYFCR12xdh4CA47q958ZRGnnDUGFVE1QhgRacJCOZ9bd5t9mr8KLaVBYTCJo5ERE8jymab5dPqe5qKfJsCZiqWglbjUo9twIDAQABo1AwTjAdBgNVHQ4EFgQUxpuwcs/CYQOyui+r1G+3KxBNhxkwHwYDVR0jBBgwFoAUxpuwcs/CYQOyui+r1G+3KxBNhxkwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAAiWUKs/2x/viNCKi3Y6blEuCtAGhzOOZ9EjrvJ8+COH3Rag3tVBWrcBZ3/uhhPq5gy9lqw4OkvEws99/5jFsX1FJ6MKBgqfuy7yh5s1YfM0ANHYczMmYpZeAcQf2CGAaVfwTTfSlzNLsF2lW/ly7yapFzlYSJLGoVE+OHEu8g5SlNACUEfkXw+5Eghh+KzlIN7R6Q7r2ixWNFBC/jWf7NKUfJyX8qIG5md1YUeT6GBW9Bm2/1/RiO24JTaYlfLdKK9TYb8sG5B+OLab2DImG99CJ25RkAcSobWNF5zD0O6lgOo3cEdB/ksCq3hmtlC/DlLZ/D8CJ+7VuZnS1rR2naQ==

# Our apps's Entity ID, which is also the URL to our metadata.
SAML_ENTITY_ID=http://localhost/v1/auth/sp

# ADMINISTRATORS is a list (space delimited) of users who have administrator
# rights. Use the user's nameID (user2@example.com) or hashed version of
# nameID (2b3b2b9ce8).  Either will work.
ADMINISTRATORS=user1@example.com

# Origins of web apps that we'll allow for redirects. See src/api/sso/test
ALLOWED_APP_ORIGINS=http://localhost:8000 http://localhost:8888

# The URI of the SSO Auth server
JWT_ISSUER=http://localhost/v1/auth

# The microservices origin
JWT_AUDIENCE=http://localhost

# How long should a JWT work before it expires
JWT_EXPIRES_IN=1h

################################################################################
# Image Service
################################################################################

# Image Service Port (default is 4444)
IMAGE_PORT=4444

# Image Service URL
IMAGE_URL=http://localhost/v1/image

################################################################################
# Search Service
################################################################################

# Search Service Port (default is 4445)
SEARCH_PORT=4445

# Search Service URL
SEARCH_URL=http://localhost/v1/search

################################################################################
# Posts Service
################################################################################

# Posts Service Port (default is 5555)
POSTS_PORT=5555

# Posts Service URL
POSTS_URL=http://localhost/v1/posts

# Redis Mock info
MOCK_REDIS=


################################################################################
# Feed Discovery Service
################################################################################

# Feed Discovery Service Port (default is 9999)
FEED_DISCOVERY_PORT=9999

# Feed Discovery Service URL
FEED_DISCOVERY_URL=http://localhost/v1/feed-discovery


################################################################################
# Parser Service
################################################################################

# Parser Service Port (default is 10000)
PARSER_PORT=10000

# Parser Service URL
PARSER_URL=http://localhost/v1/parser


################################################################################
# Planet Service
################################################################################

# Planet Service Port (default is 9876)
PLANET_PORT=9876

################################################################################
# Dependency Discovery Service
################################################################################

# Dependency Discovery Service Port (default is 10500)
DEPENDENCY_DISCOVERY_PORT=10500

# Dependency Discovery Service URL
DEPENDENCY_DISCOVERY_URL=http://localhost/v1/dependency-discovery

################################################################################
# Telescope 1.0 Legacy Environment
################################################################################

# NODE_ENV should be one of "development" or "production"
NODE_ENV=development

# PORT is the port used by the web server
PORT=3000

# API_URL is the URL of the Telescope Web API server.  Change this to
# pick which backend server our frontend uses.  If you are developing
# locally, this will be localhost:{PORT}, probably http://localhost:3000.
# Other possible values include:
#
#   (local development)
#   API_URL=http://localhost:3000
#   (our staging server)
#   API_URL=https://dev.telescope.cdot.systems
#   (our production server)
#   API_URL=https://telescope.cdot.systems
API_URL=http://localhost:3000

# PROXY_FRONTEND=1 will allow proxying the Next dev server (http://localhost:8000)
# through our node server (http://localhost:3000). Useful for testing locally.
# To run:
#
# 1. set PROXY_FRONTEND=1 in the .env
# 2. run the web server: `pnpm start`
# 3. run the Next dev server: `pnpm develop`
# 4. open http://localhost:3000/ and you'll get content from http://localhost:8000
PROXY_FRONTEND=

# LOG_LEVEL is used to set the level of debugging for the logs.
# info, error and debug are commonly used levels. See http://getpino.io/#/docs/api?id=level for more info on levels.
# to completely disable all logs, use silent.
LOG_LEVEL=debug

# LOG_FILE is used to set a destination path to write logs. Works in production mode only.
#LOG_FILE=

# Used to set if Pino should log are indexed to ElasticSearch, LOG_ELASTIC=1 to enable, if LOG_FILE and LOG_ELASTIC is set,
# LOG_ELASTIC will take priority
#LOG_ELASTIC=
# Following are used to set up Pino-Elastic
# Index name for logs to be stored under
#INDEX_NAME=logs
# Determines consistency of the write, valid values are: one, quorum or all
#CONSISTENCY=one
# Elasticsearch Version
#ELASTIC_VERSION=7
# The number of bytes for each bulk insert
#FLUSH_BYTES=1000

# MOCK_ELASTIC=1 will use an in-memory, mock Elastic instance. Useful for testing.
MOCK_ELASTIC=

# Redis Server info, password may be optional (e.g., leave empty if you don't set one)
REDIS_URL=redis://127.0.0.1
#REDIS_PORT=6379
#REDIS_PASSWORD=

# MOCK_REDIS=1 will use an in-memory, mock Redis instance. Useful for testing.
MOCK_REDIS=

# Elasticsearch info
ELASTIC_URL=http://127.0.0.1
ELASTIC_PORT=9200
# Max number of results per query
ELASTIC_MAX_RESULTS_PER_PAGE=5
# Delay to check connectivity with Elasticsearch in ms
ELASTIC_DELAY_MS=10000

# FEED_URL url used to access feed list
FEED_URL=https://wiki.cdot.senecacollege.ca/wiki/Planet_CDOT_Feed_List

# Milliseconds to wait after attempting to fetch the feed list when the server is not available
FEED_URL_INTERVAL_MS=30000

# Period of time (seconds) that an unprocessed feed must wait before its
# next processing attempt (due to previous attempt responding with HTTP 429)
FEED_PROCESSING_DELAY_SEC=3600

# Feed job queue attempts
FEED_QUEUE_ATTEMPTS=5

# Feed job queue delay(ms)
FEED_QUEUE_DELAY_MS=60000

# Number of concurrent worker processors to run. Use * if you want to run
# one per CPU. Use a number if you want to set it manually, up to a max
# of the CPU count.  If not set, we'll assume 1.
FEED_QUEUE_PARALLEL_WORKERS=1

# Max number of posts per page
MAX_POSTS_PER_PAGE=5


################################################################################
# Supabase Services
################################################################################

SUPABASE_URL=http://localhost/v1/supabase


# Auth

## General

### Telescope web URL, must match with WEB_URL
SITE_URL=http://localhost:8000

ADDITIONAL_REDIRECT_URLS=
JWT_EXPIRY=3600
DISABLE_SIGNUP=true

## Email auth
ENABLE_EMAIL_SIGNUP=false
ENABLE_EMAIL_AUTOCONFIRM=false
SMTP_ADMIN_EMAIL=admin@example.com
SMTP_HOST=mail
SMTP_PORT=2500
SMTP_USER=fake_mail_user
SMTP_PASS=fake_mail_password
SMTP_SENDER_NAME=fake_sender

## Phone auth
ENABLE_PHONE_SIGNUP=false
ENABLE_PHONE_AUTOCONFIRM=false

# Ports

## Studio port
STUDIO_PORT=8910

## API endpoint ports
KONG_HTTP_PORT=8911
KONG_HTTPS_PORT=8912

## DB port
POSTGRES_PORT=8913
